

# branch erstellen:
git branch main

#zu bracnch wechseln:
git checkout main


git commit -m 0.0.03
git push -u origin main

git push





Um dein Projekt mit GitHub zu synchronisieren, folge diesen Schritten:

    GitHub Repository erstellen:
        Gehe auf die GitHub-Website (https://github.com/) und logge dich ein.
        Klicke auf den "+"-Button in der oberen rechten Ecke und wähle "New repository".
        Gib einen Repository-Namen ein, eine optionale Beschreibung, wähle öffentlich oder privat, füge eine README-Datei hinzu (optional), und klicke dann auf "Create repository".

    Git initialisieren:
        Navigiere in deinem lokalen Projektverzeichnis über die Befehlszeile.
        Führe git init aus, um Git für dein Projekt zu initialisieren.

    Remote Repository hinzufügen:
        Kopiere die URL deines GitHub-Repositorys.
        Führe den Befehl git remote add origin <repository-URL> aus, um dein lokales Repository mit dem Remote-Repository auf GitHub zu verbinden.

    Dateien hinzufügen und commiten:
        Führe git add . aus, um alle Änderungen für den Commit vorzubereiten.
        Führe git commit -m "Erster Commit" aus, um die Änderungen zu committen.

    Branch erstellen und auf GitHub pushen (optional):
        Es wird empfohlen, einen neuen Branch zu erstellen, bevor du Code auf GitHub pushst. Führe git branch <branch-name> aus, um einen neuen Branch zu erstellen, und wechsle dann mit git checkout <branch-name> zu diesem Branch.
        Führe git push -u origin <branch-name> aus, um den Branch auf GitHub zu pushen.

    Code auf GitHub pushen:
        Führe git push -u origin master aus, wenn du den Master-Branch verwenden möchtest. Falls du einen anderen Branch erstellt hast, ersetze "master" durch den entsprechenden Branch-Namen.

Nach diesen Schritten sollte dein Code auf GitHub hochgeladen sein. Du kannst dann Änderungen weiterhin committen und mit git push auf GitHub aktualisieren.

Beachte, dass du sensible Informationen wie Passwörter oder API-Schlüssel nicht in die GitHub-Repositorys aufnehmen solltest. Verwende eine .gitignore-Datei, um solche Dateien auszuschließen.

